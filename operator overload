#include <iostream>
using namespace std;

class A
{
private:
    int x;
    int y;
public:
    friend istream &operator>>(istream &cin, A &_obj);
    friend ostream &operator<<(ostream &cout, A &_obj);
};

istream &operator>>(istream &cin, A &_obj)
{
    cin >> _obj.x;
    cin >> _obj.y;
    return (cin);
}
ostream &operator<<(ostream &cout, A &_obj)
{
    cout << _obj.x << " , " << _obj.y;
    return (cout);
}

class Point
{
public:
    int x1;
    int y1;

    friend bool operator>(Point &left, Point &right)
    {
        return left.x1 > right.x1 && left.y1 > right.y1;
    }
    friend bool operator<(Point &left, Point &right)
    {
        return left.x1 < right.x1 && left.y1 < right.y1;
    }
};

int main()
{
    A a;
    cin >> a; // cin is from istream and a is from class --> overload it with >> operator.
    cout << a;
    cout << endl;
    Point p1 = {1, 2};
    Point p2 = {3, 4};
    bool b1 = p1 > p2;
    bool b2 = p1 < p2;
    cout << b1 << endl;
    cout << b2 << endl;
    return 0;
}
