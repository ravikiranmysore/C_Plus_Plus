#include <iostream>
#include <vector>
#include <string>
#include <map>
using namespace std;

int main()
{
    cout<<"range based loop "<<endl;

    //in C
    int arr[] = { 11,22,33,44,55,66};

    //for(int i = 0; i < sizeof(arr)/sizeof(int); ++i)
    //  {
    //       cout << arr[i] << endl;
    //  }
    for(int* p = &arr[0]; p != &arr[0] + sizeof(arr)/sizeof(int);++p)
    {
        cout << *p <<endl;

    }
    // c++98
     vector<int> v{-1,42,123,9000};//vector is dynamic

    // for(vector<int>::const_iterator i = v.begin(); i != v.end();++i)
      for(vector<int>::iterator i = v.begin(); i != v.end();++i)
     {
         cout << *i <<endl;

     }

     // in C++11
     for(int x : v)
     {
         cout << "c++11: "<<x << endl;
         x *= 2;
         cout << "After : "<<x << endl;
     }

     vector<string> strings = {"Chicken is the best meat", "fish","Mutton"};
     for(const string& s : strings)
     {
         cout << s << endl;
        // s += "2"; if const you cant, but can do in old style c++
       //  cout << s << endl;
     }

     map<int,string> phonebook{ make_pair(1,"R"),make_pair(2,"A"),make_pair(3,"V")};//init list
     for(const auto& p: phonebook)
     {
         cout << "(" << p.first<< "," << p.second<< ")"<<endl;
     }
    return 0;
}
