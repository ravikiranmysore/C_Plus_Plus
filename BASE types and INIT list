#include <iostream>
using namespace std;

class Base
{
  const int _x ;
public:
    Base(int x): _x(x)
    {
        // if _x = x; compiler error
    }
    int getValue()
    {
        return _x;
    }
};

int main()
{
    Base a(12);
    cout << a.getValue()  <<endl;
    return 0;
}

#include <iostream>
using namespace std;

class Base
{
   int &_x ; // & and init list
public:
    Base(int x): _x(x)
    {
        // if _x = x; compiler error
    }
    int getValue()
    {
        return _x;
    }
};

int main()
{
    Base a(12);
    cout << a.getValue()  <<endl;
    return 0;
}

//  c-style structure copying,No default constructor
#include <iostream>
using namespace std;

class Base
{
public:
   int x;
    int getValue()
    {
        return x;
    }
};

int main()
{
   // Base a(12); error
    Base a = {10}; //  c-style structure copying,No default constructor
    cout << a.getValue()  <<endl;
    return 0;
}

#include <iostream>
using namespace std;

class Base
{
    int x;
public:
    int getValue()
    {
        return x;
    }
};

int main()
{
    Base a = {10}; // Error as init list are only allowed when int x is public;NOT PRIVATE
                  // or else you will get BRACE ENCLOSED INITILIZER LIST ERROR
    cout << a.getValue()  <<endl;
    return 0;
}

#include <iostream>
using namespace std;

class Base
{
public:
    int x;
    int getValue()
    {
        return x;
    }
};

int main()
{
    Base a = {10};
    cout << a.getValue()  <<endl;
    return 0;
}

#include <iostream>
using namespace std;

class Base
{
    int x;
public:
    Base(int x): x(x) {} //we need constructor if int x is private
    int getValue()
    {
        return x;
    }
};

int main()
{
    Base a = {10};
    Base b = a;
    cout << a.getValue()<< "\t" << b.getValue() <<endl;
    return 0;
}

#include <iostream>
using namespace std;

class Base
{
    int x;
public:
    Base(int x): x(x) {} //we need constructor if int x is private
    int getValue()
    {
        return x;
    }
};

int main()
{
    Base a = 10;// same as {10},but 10,20 will be error,then int x,int y should be class private
    Base b = a;
    cout << a.getValue()<< "\t" << b.getValue() <<endl;
    return 0;
}
